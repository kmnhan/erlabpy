[project]
name = "erlab"
version = "3.8.2"
authors = [{ name = "Kimoon Han", email = "khan@kaist.ac.kr" }]
description = "Python package for ARPES data analysis and visualization."
readme = "README.md"
requires-python = ">=3.11"
keywords = ["Condensed Matter Physics", "ARPES"]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "findiff>=0.12.0",
    "h5netcdf>=1.2.0",
    "igor2>=0.5.9",
    "joblib>=1.3.2",
    "lazy-loader>=0.4",
    "lmfit>=1.3.2",
    "matplotlib>=3.8.0",
    "numba>=0.61.0",
    "numpy>=1.26.0",
    "pickleshare>=0.7.5",
    "pyperclip>=1.8.2",
    "pyqtgraph>=0.13.1",
    "qtawesome>=1.3.1",
    "qtconsole>=5.6.0",
    "qtpy>=2.4.1",
    "scipy>=1.15.0",
    "tqdm>=4.66.2",
    "varname>=0.13.0",
    "xarray>=2024.10.0",
    "xarray-lmfit>=0.1.2",
]

[project.optional-dependencies]
complete = ["erlab[viz,io,perf,misc]"]
viz = ["hvplot", "ipywidgets"]
io = ["astropy>=5.1.1", "nexusformat>=1.0.6"]
perf = ["numbagg>=0.8.1"]
misc = ["iminuit>=2.25.2", "csaps>=1.1.0", "dask>=2024.4.1"]

[dependency-groups]
dev = [
    "commitizen>=4.3.0",
    "cz-changeup>=1.1.2",
    "ipykernel>=6.29.5",
    "jupyter-bokeh>=4.0.5",
    "mypy[faster-cache,reports]>=1.13.0",
    "pooch>=1.8.0",
    "pre-commit>=3.7.0",
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-datadir>=1.5.0",
    "pytest-env>=1.1.5",
    "pytest-qt>=4.4.0",
    "ruff>=0.9.1",
]
docs = [
    "furo>=2024.8.6",
    "ipykernel>=6.29.5",
    "myst-nb>=1.2.0",
    "pybtex>=0.24.0",
    "pyqt6>=6.8.0",
    "sphinx>=8.1.3",
    "sphinx-autodoc-typehints>=3.0.0",
    "sphinx-autosummary-accessors>=2025.3.1",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "sphinx-notfound-page>=1.0.4",
    "sphinx-qt-documentation>=0.4.1",
    "sphinxcontrib-bibtex>=2.6.3",
    "sphinxcontrib-googleanalytics>=0.4",
]
pyqt6 = ["pyqt6>=6.8.0"]
pyside6 = ["pyside6>=6.8.1.1"]


[project.scripts]
itool-manager = "erlab.interactive.imagetool.manager:main"

[project.urls]
Documentation = "https://erlabpy.readthedocs.io"
Repository = "https://github.com/kmnhan/erlabpy.git"
Issues = "https://github.com/kmnhan/erlabpy/issues"
Changelog = "https://github.com/kmnhan/erlabpy/blob/main/CHANGELOG.md"

[project.entry-points."xarray.backends"]
erlab-igor = "erlab.io.igor:IgorBackendEntrypoint"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.commitizen]
change_type_map = { "BREAKING CHANGE" = "💥 Breaking Changes", "feat" = "✨ Features", "fix" = "🐞 Bug Fixes", "perf" = "⚡️ Performance", "refactor" = "♻️ Code Refactor" }

version_provider = "uv"
update_changelog_on_bump = true
tag_format = "v$version"
changelog_start_rev = "v1.2.1"
changelog_incremental = true
changelog_merge_prerelease = true
name = 'cz_changeup'
change_type_order = [
    "💥 Breaking Changes",
    "✨ Features",
    "🐞 Bug Fixes",
    "⚡️ Performance",
    "♻️ Code Refactor",
]
# cz-changeup configuration
changeup_repo_base_url = "https://github.com/kmnhan/erlabpy"
changeup_show_body = true
changeup_body_indent = 2
changeup_link_issues = true
changeup_scope_prefix = "**"
changeup_scope_suffix = ""
changeup_scope_separator = ":** "

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "S",
    # "FBT",
    "B",
    "A",
    "C4",
    # "DTZ",
    "FA",
    "ICN",
    "LOG",
    "G",
    "PIE",
    # "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TC",
    "INT",
    # "ARG",
    # "PTH",
    # "FIX",
    # "PLC",
    # "PLE",
    # "PLW",
    "TRY",
    "FLY",
    "NPY",
    "PERF",
    "FURB",
    "RUF",
]
ignore = [
    "S101",    # Use of assert
    "S301",    # Suspicious pickle usage
    "S603",    # `subprocess` call
    "S607",    # Starting a process with a partial executable path
    "PLW2901", # Outer variable overwritten by inner target
    "ICN001",  # Import conventions
    "TRY003",  # Long exception messages
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D105",    # Missing docstring in magic method
]
extend-select = []
allowed-confusables = [
    "×",
    "−",
    "𝑎",
    "𝒂",
    "𝑏",
    "𝒃",
    "𝑐",
    "𝑥",
    "𝑦",
    "𝑧",
    "𝛼",
    "γ",
    "𝛾",
    "ν",
    "α",
]
exclude = ["*.ipynb"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules = ["array", "io"]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--strict-config",
    "--strict-markers",
    "--import-mode=importlib",
]
pythonpath = "src"
testpaths = "tests"
minversion = "8.3"
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ["always"]

[tool.pytest_env]
NUMBA_JIT_COVERAGE = 1
DISPLAY = ":99.0"

[tool.coverage.run]
source = ["src"]
omit = ["*/_deprecated/*"]
concurrency = ["multiprocessing", "thread"]

[tool.coverage.report]
exclude_also = [
    "@numba.njit",
    "@numba.vectorize",
    "@cfunc",
    "get_ipython()",
    "from IPython",
    "def mouseDragEvent",
    "def .*_drag",
    "def _link_splitters",
    "def draw_mode",
    "QtWidgets.QApplication(sys.argv)",
    "QtWidgets.QMessageBox.question",
    "if not qapp:",
    "if execute is None:",
    "qapp.exec()",
    'if __name__ == "__main__:"',
    "except varname.VarnameRetrievingError:",
    "if typing.TYPE_CHECKING:",
    "raise LookupError",
]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
strict = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
allow_redefinition = true
check_untyped_defs = false
exclude = [
    '^docs/',
    '^tests/',
    '^build/',
    '_deprecated/',
    '^src/erlab/interactive/curvefittingtool.py',
]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
disable_error_code = ["import-untyped"]
pretty = true
